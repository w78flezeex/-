const { EmbedBuilder, ActionRowBuilder, SelectMenuBuilder, ComponentType } = require("discord.js");
const config = require('../config.json');

module.exports.run = async (client, message, args) => {

const embed = new EmbedBuilder()
.setTitle(`Commands of ${client.user.username}`)
.setColor('#2F3136')
.setDescription('**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –µ–µ –∫–æ–º–∞–Ω–¥—ã**')
.addFields({ name: `–°—Å—ã–ª–∫–∏:`, value: `- [–Æ—Ç—É–± –∫–∞–Ω–∞–ª](https://www.youtube.com/channel/UC-ahntthLD-1M9UogTYhy9g)\n- [–î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä](https://discord.gg/ZVzuq4kuu3)`, inline: true })
.setTimestamp()
.setFooter({
  text: `Requested by ${message.author.username} | ` + config.copyright, 
  iconURL: message.author.displayAvatarURL()
});

  const giveaway = new EmbedBuilder()
  .setTitle("Categories ¬ª –†–æ–∑—ã–≥—Ä—ã—à")
  .setColor('#2F3136')
  .setDescription("```yaml\n–í–æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑–¥–∞—á–∏:```")
  .addFields(
    { name: 'Create / Start'  , value: `–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–æ–∑—ã–≥—Ä—ã—à –≤ —Å–≤–æ–µ–π –≥–∏–ª—å–¥–∏–∏!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
    { name: 'Drop' , value: `–ù–∞—á–Ω–∏ —Ä–æ–∑—ã–≥—Ä—ã—à –∫–∞–ø–µ–ª—å!\n > **Types: __\`slash\` / \`—Å–æ–æ–±—â–µ–Ω–∏–µ\`__**`, inline: true },
    { name: 'Edit' , value: `–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —É–∂–µ –¥–µ–π—Å—Ç–≤—É—é—â—É—é —Ä–∞–∑–¥–∞—á—É!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
    { name: 'End' , value: `–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É–∂–µ –¥–µ–π—Å—Ç–≤—É—é—â—É—é –∞–∫—Ü–∏—é!\n > **Types: __\`slash\` / \`—Å–æ–æ–±—â–µ–Ω–∏–µ\`__**`, inline: true },
    { name: 'List' , value: `–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏, –ø—Ä–æ–≤–æ–¥–∏–º—ã–µ –≤ —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!\n > **Types: __\`clash\` / \`message\`__**`, inline: true },
    { name: 'Pause' , value: `–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É–∂–µ –¥–µ–π—Å—Ç–≤—É—é—â—É—é —Ä–æ–∑—ã–≥—Ä—ã—à!\n > **Type: __\`slash\`__**`, inline: true },
    { name: 'Reroll' , value: `–ü–µ—Ä–µ–∑–∞–ª–µ–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏–≤—à–∏–π—Å—è —Ä–æ–∑—ã–≥—Ä—ã—à!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
    { name: 'Resume' , value: `–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ä–∞–∑–¥–∞—á—É!\n > **Type: __\`slash\`__**`, inline: true },
  )
  .setTimestamp()
  .setFooter({
    text: `Requested by ${message.author.username} | ` + config.copyright, 
    iconURL: message.author.displayAvatarURL()
  });

  const general = new EmbedBuilder()
  .setTitle("Categories ¬ª –û–±—â–∏–π")
  .setColor('#2F3136')
  .setDescription("```yaml\n–í–æ—Ç –æ–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:```")
  .addFields(
    { name: 'Help'  , value: `–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —ç—Ç–æ–º—É –±–æ—Ç—É!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
    { name: 'Invite' , value: `–ü–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–æ—Ç–∞!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
    { name: 'Ping' , value: `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É –≤–µ–±-—Å–æ–∫–µ—Ç–∞ –±–æ—Ç–∞!\n > **Types: __\`slash\` / \`message\`__**`, inline: true },
  )
  .setTimestamp()
  .setFooter({
    text: `–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π ${message.author.username} | ` + config.copyright, 
    iconURL: message.author.displayAvatarURL()
  });
  
  const components = (state) => [
    new ActionRowBuilder().addComponents(
        new SelectMenuBuilder()
        .setCustomId("–º–µ–Ω—é –ø–æ–º–æ—â–∏")
        .setPlaceholder("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        .setDisabled(state)
        .addOptions([{
                label: `–ü–æ–¥–∞—Ä–∫–∏`,
                value: `–æ—Ç–¥–∞–≤–∞—Ç—å`,
                description: `–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞–∑–¥–∞—á–∞—Ö!`,
                emoji: `üéâ`
            },
            {
                label: `–û–±—â–∏–π`,
                value: `–æ–±—â–∏–π`,
                description: `–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞!`,
                emoji: `‚öô`
            }
        ])
    ),
];

const initialMessage = await message.reply({ embeds: [embed], components: components(false) });

const filter = (interaction) => interaction.user.id === message.author.id;

        const collector = message.channel.createMessageComponentCollector(
            {
                filter,
                componentType: ComponentType.SelectMenu,
                idle: 300000,
                dispose: true,
            });

        collector.on('collect', (interaction) => {
            if (interaction.values[0] === "giveaway") {
                interaction.update({ embeds: [giveaway], components: components(false) }).catch((e) => {});
            } else if (interaction.values[0] === "general") {
                interaction.update({ embeds: [general], components: components(false) }).catch((e) => {});
            }
        });
        collector.on("–∫–æ–Ω–µ—Ü", (collected, reason) => {
            if (reason == "–≤—Ä–µ–º—è") {
                initialMessage.edit({
                   content: "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä —É–Ω–∏—á—Ç–æ–∂–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",
                   components: [],
                });
             }
        });
}
