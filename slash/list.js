const Discord = require('discord.js');
const config = require('../config.json');

module.exports = {
  name: 'list',
  description: 'üéâ –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø—Ä–∏–∑–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.',
  run: async (client, interaction) => {
    const select = new Discord.SelectMenuBuilder()
      .setCustomId('–≤—ã–±–µ—Ä–∏—Ç–µ')
      .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ø—Ä–∏–∑–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!')
      .addOptions([
        {
          label: 'üéâ –û–±—ã—á–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø—Ä–∏–∑–æ–≤',
          description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø—Ä–∏–∑–æ–≤, –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ!',
          value: 'normal',
        },
      ]);
    const row = new Discord.ActionRowBuilder().addComponents([select]);
    let giveaways = client.giveawaysManager.giveaways.filter(
      (g) => g.guildId === `${interaction.guild.id}` && !g.ended
    );
    if (!giveaways.some((e) => e.messageId)) {
      return interaction.reply('üí• –†–æ–∑—ã–≥—Ä—ã—à–∏ –ü—Ä–∏–∑–æ–≤ –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç');
    }
    const msg = await interaction.channel.send({
      embeds: [
        new Discord.EmbedBuilder()
          .setDescription('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!')
          .setColor('#f542ec')
          .setTimestamp(),
      ],
      components: [row],
    });
    let embed = new Discord.EmbedBuilder()
      .setTitle('–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø—Ä–∏–∑–æ–≤')
      .setColor('#f58142')
      .setFooter({
          text: `Requested by ${interaction.user.username} | ` + config.copyright,
          iconURL: interaction.user.displayAvatarURL()
      })
      .setTimestamp();
    const filter = (x) =>
      x.customId == 'select' && x.user.id == interaction.member.id;
    const collector = await interaction.channel.createMessageComponentCollector(
      { filter, time: 60000, max: 1 }
    );
    await interaction.deferReply();
    collector.on('collect', async (i) => {
      const val = i.values[0];
      if (val == 'normal') {
        await Promise.all(
          giveaways.map(async (x) => {
            embed.addFields({ name:
              `–û–±—ã—á–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ –ø–æ–¥–∞—Ä–∫–æ–≤:`, value: `**–ü—Ä–∏–∑:** **[${x.prize}](https://discord.com/channels/${x.guildId}/${x.channelId}/${x.messageId})\nStarted:** <t:${((x.startAt)/1000).toFixed(0)}:R> (<t:${((x.startAt)/1000).toFixed(0)}:f>)\n**Ends:** <t:${((x.endAt)/1000).toFixed(0)}:R> (<t:${((x.endAt)/1000).toFixed(0)}:f>)`
              });
          })
        );
        msg.delete();
        interaction.editReply({ embeds: [embed], components: [] });
      }
    });
    collector.on('end', (collected, reason) => {
      if (reason == '–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è') {
        interaction.editReply({
          content: '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä —É–Ω–∏—á—Ç–æ–∂–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!',
          components: [],
        });
      }
    });
  },
};